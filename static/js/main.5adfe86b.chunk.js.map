{"version":3,"sources":["getdata.js","objects/Data.js","components/search/Exchange.js","components/Search.js","components/DataChart.js","components/Selected.js","routes/Home.js","fbase.js","routes/Auth.js","Router.js","App.js","index.js"],"names":["exchangeRate","base","symbol","start","end","a","axios","get","rates","data","res","Object","entries","map","date","rate","ExchangeRateData","stroke","orientation","type","yAxis","setData","this","putLabel","newData","Exchange","select","today","Date","format","currency","useState","setBase","setSymbol","menuChange","event","target","name","value","onAddClicked","ExData","Grid","container","id","item","xs","md","justify","FormControl","className","InputLabel","Select","labelId","onChange","c","idx","MenuItem","alignItems","size","IconButton","onClick","Search","tab","setTab","Paper","variant","elevation","Chip","label","clickable","color","renderSearchComponent","merge","xAxis","name_data_entries","copy_data","assign","forEach","xList","keys","e","x","obj","n","dt","sort","m","DataChart","datas","mergedData","setMergedData","useEffect","d","width","margin","top","right","left","bottom","dataKey","domain","yAxisId","allowDataOverflow","angle","offset","position","textAnchor","strokeDasharray","strokeWidth","dot","Selected","selected","removeSelected","labels","ViewSelected","style","background","onDelete","s","Home","defaultStrokes","setStrokes","prev","Math","random","b","setSelected","setLabels","newLabel","includes","alert","length","filter","p","index","useSelected","height","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","firestore","storage","Auth","onGooleClick","provider","GoogleAuthProvider","signInWithPopup","Button","fullWidth","Router","isLoggedIn","exact","path","prototype","f","replace","getFullYear","getMonth","getDate","addDate","dates","setDate","App","init","setInit","user","setUser","onAuthStateChanged","u","Boolean","ReactDOM","render","document","getElementById"],"mappings":"0XACaA,EAAY,uCAAG,WAAOC,EAAMC,EAAQC,EAAOC,GAA5B,mBAAAC,EAAA,4DACR,kCADQ,SAIbC,IAAMC,IAAN,UAHK,kCAGL,yBAAqCN,EAArC,oBAAqDC,EAArD,qBAAwEC,EAAxE,mBAAwFC,IAJ3E,uBAGZI,EAHY,EAGpBC,KAAQD,MAERE,EAAM,GACVC,OAAOC,QAAQJ,GAAOK,KAAK,mCAAEC,EAAF,KAAQC,EAAR,YAAkBL,EAAII,GAAQC,EAAKb,MANtC,kBAOjBQ,GAPiB,2CAAH,4DCcZM,EAAb,kDACI,cAAkD,IAAD,EAApCf,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,OAAQe,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,YAAc,4BAC7C,cAAM,CACFC,KAAK,OACLC,MAAM,GAAD,OAAInB,EAAJ,YAAYC,GACjBe,SACAC,iBAKRG,QAViD,uCAUvC,WAAelB,EAAOC,GAAtB,eAAAC,EAAA,sEACaL,EAAasB,KAAKrB,KAAMqB,KAAKpB,OAAQC,EAAOC,GADzD,OACAK,EADA,OAENa,KAAKb,KAAOA,EAFN,gDAVuC,0DAcjDc,SAAW,WACP,MAAM,GAAN,OAAUD,KAAKrB,KAAf,cAAyBqB,KAAKpB,OAA9B,kBARA,EAAKD,KAAKA,EACV,EAAKC,OAAOA,EARiC,EADrD,WAbI,cAAiD,IAApCiB,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,MAAOH,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,YAAc,yBAOhDG,QAAU,SAASG,GAEf,OADAF,KAAKb,KAAOe,EACLF,MARPA,KAAKb,KAAO,GACZa,KAAKH,KAAOA,GAAQ,OACpBG,KAAKF,MAAQA,EACbE,KAAKL,OAASA,EACdK,KAAKJ,YAAcA,GAAe,UCoE3BO,EAtEE,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,OAAQT,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,YAEzBS,GAAQ,IAAIC,MAAOC,OAAO,cAC1BC,EAAW,CAAC,MAAO,MAAO,MAAO,MAAO,OAHE,EAI1BC,mBAAS,OAJiB,mBAIzC9B,EAJyC,KAInC+B,EAJmC,OAKtBD,mBAAS,OALa,mBAKzC7B,EALyC,KAKjC+B,EALiC,KAM1CC,EAAa,SAACC,GACS,kBAAtBA,EAAMC,OAAOC,KACZL,EAAQG,EAAMC,OAAOE,OACK,oBAAtBH,EAAMC,OAAOC,MACjBJ,EAAUE,EAAMC,OAAOE,QAEzBC,EAAY,uCAAG,4BAAAlC,EAAA,6DACXmC,EAAS,IAAIxB,EAAiB,CAChBf,OACAC,SACAe,SACAC,gBALH,SAOXsB,EAAOnB,QAlBJ,aAkBkBM,GAPV,OAQjBD,EAAOc,GARU,2CAAH,qDAWlB,OACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAG,eAAnB,UACI,cAACF,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,QAAQ,SAA5C,SACI,eAACC,EAAA,EAAD,CAAaC,UAAU,kBAAvB,UACI,cAACC,EAAA,EAAD,CAAYP,GAAG,sBAAf,kBACA,cAACQ,EAAA,EAAD,CACIC,QAAQ,sBACRf,KAAK,gBACLC,MAAOrC,EACPoD,SAAUnB,EAJd,SAOQJ,EAASjB,KAAK,SAACyC,EAAGC,GAAJ,OACV,cAACC,EAAA,EAAD,CAAoBlB,MAAOgB,EAA3B,SAA+BA,GAAhBC,aAMnC,cAACd,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACG,GAAI,GAAIC,GAAI,EAAGW,WAAW,SAASV,QAAQ,SAAhE,SACI,cAAC,IAAD,CAAyBW,KAAK,SAElC,cAACjB,EAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,QAAQ,SAA5C,SACI,eAACC,EAAA,EAAD,CAAaC,UAAU,kBAAvB,UACI,cAACC,EAAA,EAAD,CAAYP,GAAG,wBAAf,oBACA,cAACQ,EAAA,EAAD,CACIC,QAAQ,wBACRd,MAAOpC,EACPmC,KAAK,kBACLgB,SAAUnB,EAJd,SAMQJ,EAASjB,KAAK,SAACyC,EAAGC,GAAJ,OACV,cAACC,EAAA,EAAD,CAAoBlB,MAAOgB,EAA3B,SAA+BA,GAAhBC,aAMnC,cAACd,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACG,GAAI,GAAIC,GAAI,EAAGW,WAAW,SAASV,QAAQ,SAAhE,SACI,cAACY,EAAA,EAAD,CAAYC,QAASrB,EAArB,SACI,cAAC,IAAD,YC3BLsB,G,OApCA,SAAC,GAAmC,IAAlCnC,EAAiC,EAAjCA,OAAQT,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,YAAiB,EACxBa,mBAAS,gBADe,mBACvC+B,EADuC,KAClCC,EADkC,KAc9C,OACI,eAACC,EAAA,EAAD,CAAOC,QAAQ,YAAYC,UAAW,EAAtC,UACI,qBAAKvB,GAAG,gBAAR,SAdK,CAAC,gBAAO,6BAgBA9B,KAAI,SAACwB,EAAMkB,GAAP,OACL,cAACY,EAAA,EAAD,CAEIC,MAAO/B,EACPuB,QAAS,kBAAIG,EAAO1B,IACpBgC,WAAS,EACTC,MAAM,WAJDf,QASrB,qBAAKZ,GAAG,aAAR,SA1BsB,WAC1B,OAAQmB,GACJ,IAAK,gBACD,OAAO,cAAC,EAAD,CAAUpC,OAAQA,EAAQR,YAAaA,EAAaD,OAAQA,IAGvE,QACI,OAAO,8BAoBNsD,U,iBC3BJC,EAAQ,SAACC,GAAgC,IAClD,IAAI/D,EAAM,GADwC,mBAAtBgE,EAAsB,iCAAtBA,EAAsB,kBAElD,IAAIC,EAAYD,EAAkB7D,KAAI,mCAAEwB,EAAF,KAAQ5B,EAAR,WAAkB,CAAC4B,EAAM1B,OAAOiE,OAAO,GAAInE,OAmBjF,OAlBAkE,EAAUE,SAAQ,YAAmB,IAC7BC,EAD4B,mBAAVrE,GAAU,WAEhC,IACIqE,EAAQnE,OAAOoE,KAAKtE,GACvB,MAAMuE,GACHF,EAAM,GAEVA,EAAMD,SAAS,SAAAI,GACX,IAAIC,EAAG,eAAKT,EAAQQ,GACpBN,EAAUE,SAAS,YAAc,IAAD,mBAAXM,EAAW,KAARC,EAAQ,KACxBH,KAAKG,IACLF,EAAIC,GAAKC,EAAGH,UACLG,EAAGH,OAGlBvE,EAAI,GAAD,mBAAKA,GAAL,CAAUwE,UAGdxE,EAAI2E,MAAM,SAACC,EAAGH,GAAJ,OAAUG,EAAEb,GAAUU,EAAEV,GAAS,GAAK,MAgE5Cc,EA7DG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAAOf,EAAW,EAAXA,MAAW,EACE1C,mBAAS,IADX,mBAC3B0D,EAD2B,KACfC,EADe,KAElCC,qBAAU,WACND,EAAelB,EAAK,WAAL,GAAMC,GAAN,mBAAgBe,EAAM3E,KAAK,SAAA+E,GAAC,MAAI,CAACA,EAAExE,MAAOwE,EAAEnF,eAC7D,CAAC+E,IAQH,OACA,cAAC,IAAD,CAAqBK,MAAM,OAA3B,SACI,eAAC,IAAD,CAAepF,KAAMgF,EAAYK,OAAQ,CAACC,IAAK,GAAIC,MAAO,EAAGC,KAAM,EAAGC,OAAQ,GAA9E,UACI,cAAC,IAAD,CAAO7D,KAAMoC,EAAO0B,QAAS1B,IAEzBe,EAAM3E,KAAK,SAAC+E,EAAGrC,GAAS,IAZhBlB,EAaGjB,EAAsBwE,EAAtBxE,MAAOF,EAAe0E,EAAf1E,YACd,OACI,cAAC,IAAD,CAEImB,KAAMjB,EACNgF,OAAQ,CAAC,OAAQ,QACjBC,QAASjF,EACTF,YAAaA,EACboF,mBAAmB,EACnBlC,OAtBJ/B,EAsBsBjB,EAtBZ,CAC1BkB,MAAOD,EACPkE,MAAO,EACPC,QAAS,GACTC,SAAU,YACVC,WAAY,YAWanD,MAUrB,cAAC,IAAD,CAAeoD,gBAAgB,QAC/B,cAAC,IAAD,IACA,cAAC,IAAD,IAEInB,EAAM3E,KAAK,SAAC+E,EAAGrC,GAAS,IACfnC,EAAuBwE,EAAvBxE,MAAOD,EAAgByE,EAAhBzE,KAAMF,EAAU2E,EAAV3E,OAClB,MACW,SAAPE,GACA,cAAC,IAAD,CACIkF,QAASjF,EACTD,KAAK,WAELkB,KAAMjB,EACN+E,QAAS/E,EACTH,OAAQA,EACR2F,YAAa,EACbC,KAAK,GALAtD,YCjDlBuD,EArBE,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,SAAkBC,GAAoB,EAA5BC,OAA4B,EAApBD,gBAC3BE,EAAe,SAAC,GAA0B,IAAzBjG,EAAwB,EAAxBA,OAAQmD,EAAgB,EAAhBA,MAAOb,EAAS,EAATA,IAClC,OACI,cAACY,EAAA,EAAD,CACIC,MAAOA,EACP+C,MAAO,CAACC,WAAYnG,GACpBoG,SAAU,WAAKL,EAAezD,OAI1C,OACI,mCAEIwD,EAASlG,KAAI,SAACyG,EAAG/D,GAAJ,OACT,cAAC2D,EAAD,CAAwBjG,OAAQqG,EAAErG,OAAQmD,MAAOkD,EAAE/F,WAAYgC,IAAKA,GAAjDA,SC8BpBgE,EAxCF,WAAO,IAAD,EACsBxF,mBAAS,CAAC,UAAW,UAAW,UAAU,UAAW,YAD3E,mBACRyF,EADQ,KACQC,EADR,KAEf9B,qBAAU,WACN8B,GAAW,SAAAC,GAAI,OAAYA,EANF7G,KAAI,SAAAR,GAAC,MAAK,CAACsH,KAAKC,SAASvH,MACzBgF,MAAK,SAAChF,EAAEwH,GAAH,OAASxH,EAAE,GAAGwH,EAAE,MACrBhH,KAAI,SAAAR,GAAC,OAAIA,EAAE,WAKrC,IACH,IALe,EAKK,WAAO,IAAD,EACU0B,mBAAS,IADnB,mBACfgF,EADe,KACLe,EADK,OAEM/F,mBAAS,IAFf,mBAEfkF,EAFe,KAEPc,EAFO,KAmBtB,MAAO,CAAChB,EAAUE,EAhBH,SAACzF,GACZ,IAAMwG,EAAWxG,EAAQD,WACtB0F,EAAOgB,SAASD,GACfE,MAAM,yEAEAjB,EAAOkB,QAAQ,EACrBD,MAAM,qGAGVJ,GAAY,SAAAJ,GAAI,4BAAQA,GAAR,CAAclG,OAC9BuG,GAAU,SAAAL,GAAI,4BAAQA,GAAR,CAAcM,SAET,SAACzE,GACpBuE,GAAY,SAAAJ,GAAI,OAAIA,EAAKU,QAAO,SAACC,EAAGC,GAAJ,OAAaA,IAAQ/E,QACrDwE,GAAU,SAAAL,GAAI,OAAIA,EAAKU,QAAO,SAACC,EAAGC,GAAJ,OAAaA,GAAO/E,UAIPgF,GA1BpC,mBA0BRxB,EA1BQ,KA0BEE,EA1BF,KA0BUvF,EA1BV,KA0BkBsF,EA1BlB,KA2Bf,OACI,qCACA,qBAAKG,MAAO,CAACqB,OAAO,SAApB,SACKzB,EAASoB,OAAO,GAAK,cAAC,EAAD,CAAW3C,MAAOuB,EAAUtC,MAAM,WAE5D,qBAAK9B,GAAG,WAAR,SACI,cAAC,EAAD,CAAUoE,SAAUA,EAAUE,OAAQA,EAAQD,eAAgBA,MAElE,cAAC,EAAD,CAAQtF,OAAQA,EAAQT,OAAQuG,EAAeP,EAAOkB,QAASjH,YAA6B,EAAhB+F,EAAOkB,OAAa,QAAU,a,6BC5BlHM,IAASC,cAVc,CACnBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,gBACnBK,MAAOL,6CACPM,cAAeN,iBAKZ,IAAMO,EAAmBV,IACnBW,EAAcX,IAASY,O,GACXZ,IAASa,YACJb,IAASc,U,QCCxBC,EAhBF,WACT,IAAMC,EAAY,uCAAG,4BAAApJ,EAAA,6DACXqJ,EAAW,IAAIP,EAAiBE,KAAKM,mBAD1B,SAEXP,EAAYQ,gBAAgBF,GAFjB,2CAAH,qDAKlB,OACI,eAACG,EAAA,EAAD,CACI5F,QAAQ,WACRL,QAAS6F,EACTK,WAAS,EAHb,UAII,cAAC,IAAD,IAJJ,oECYOC,EAnBA,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACb,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UAEQA,EACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAGJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,WCG5BtI,KAAKuI,UAAUtI,OAAQ,SAAUuI,GAS/B,OADAA,GAFAA,GAFAA,GAFAA,EAAEA,EAAEC,QAAQ,OAAQ/I,KAAKgJ,gBAErBD,QAAQ,KAAM/I,KAAKgJ,cAAc,MAEjCD,QAAQ,KAAM/I,KAAKiJ,WAAa,EAAIjJ,KAAKiJ,WAAa,EAAI,KAAOjJ,KAAKiJ,WAAa,KAEnFF,QAAQ,KAAM/I,KAAKkJ,UAAY,EAAIlJ,KAAKkJ,UAAY,IAAOlJ,KAAKkJ,YAGtE5I,KAAKuI,UAAUM,QAAU,SAASC,GAEhC,OADApJ,KAAKqJ,QAAQrJ,KAAKkJ,UAAUE,GACrBpJ,MAGMsJ,MA/BH,WAAO,IAAD,EACQ7I,oBAAS,GADjB,mBACT8I,EADS,KACHC,EADG,OAEQ/I,mBAAS,MAFjB,mBAETgJ,EAFS,KAEHC,EAFG,KAUhB,OAPArF,qBAAU,WACRyD,EAAY6B,oBAAoB,SAAAC,GAC3BA,GACDF,EAAQE,GACVJ,GAAQ,SAGLD,EACC,cAAC,EAAD,CAAQb,WAAYmB,QAAQJ,KAE5B,0ECZVK,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.5adfe86b.chunk.js","sourcesContent":["import axios from 'axios';\nexport const exchangeRate = async (base, symbol, start, end) => {\n    const api_url = \"https://api.exchangeratesapi.io\";\n    const { \n        data: { rates }\n     } = await axios.get(`${api_url}/history?base=${base}&symbols=${symbol}&start_at=${start}&end_at=${end}`);\n    let res = {};\n    Object.entries(rates).map( ([date, rate]) => res[date] = rate[symbol] );\n    return res;\n}","import { exchangeRate } from 'getdata';\nexport class Data {\n    constructor({type, yAxis, stroke, orientation}) {\n        this.data = {};\n        this.type = type || \"line\";\n        this.yAxis = yAxis;\n        this.stroke = stroke;\n        this.orientation = orientation || \"left\";\n    }\n    setData = function(newData){\n        this.data = newData;\n        return this;\n    }\n}\n\nexport class ExchangeRateData extends Data{\n    constructor({base, symbol, stroke, orientation}) {\n        super({\n            type:\"line\",\n            yAxis:`${base}/${symbol}`,\n            stroke,\n            orientation\n        });\n        this.base=base;\n        this.symbol=symbol;\n    }\n    setData = async function(start, end){\n        const data = await exchangeRate(this.base, this.symbol, start, end);\n        this.data = data;\n    }\n    putLabel = function(){\n        return `${this.base} / ${this.symbol} 환율`;\n    }\n}","import React, {useState} from 'react';\nimport {Grid, FormControl, InputLabel, Select, MenuItem, IconButton} from '@material-ui/core';\nimport { IoAddCircleOutline, IoSwapHorizontalOutline } from 'react-icons/io5'\nimport { ExchangeRateData } from 'objects/Data';\n\nconst Exchange = ({select, stroke, orientation}) => {\n    const from = '2020-09-01';\n    const today = new Date().format('yyyy-mm-dd');\n    const currency = [\"USD\", \"KRW\", \"CNY\", \"JPY\", \"EUR\"];\n    const [base, setBase]=useState(\"USD\");\n    const [symbol, setSymbol]=useState(\"KRW\");\n    const menuChange = (event) => {\n        if(event.target.name === \"exchange-base\")\n            setBase(event.target.value);\n        else if(event.target.name === \"exchange-symbol\")\n            setSymbol(event.target.value);\n    };\n    const onAddClicked = async () => {\n        const ExData = new ExchangeRateData({\n                            base,\n                            symbol,\n                            stroke,\n                            orientation\n                        })\n        await ExData.setData(from, today);\n        select(ExData);\n    }\n\n    return(\n        <Grid container id=\"exchange-tab\">\n            <Grid container item xs={12} md={5} justify=\"center\">\n                <FormControl className=\"search-exchange\">\n                    <InputLabel id=\"exchange-base-label\">Base</InputLabel>\n                    <Select\n                        labelId=\"exchange-base-label\"\n                        name=\"exchange-base\"\n                        value={base}\n                        onChange={menuChange}\n                        >\n                        {\n                            currency.map( (c, idx) => (\n                                <MenuItem key={idx} value={c}>{c}</MenuItem>\n                            ))\n                        }\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item container xs={12} md={1} alignItems=\"center\" justify=\"center\">\n                <IoSwapHorizontalOutline size=\"24\"/>\n            </Grid>\n            <Grid container item xs={12} md={5} justify=\"center\">\n                <FormControl className=\"search-exchange\">\n                    <InputLabel id=\"exchange-symbol-label\">Symbol</InputLabel>\n                    <Select\n                        labelId=\"exchange-symbol-label\"\n                        value={symbol}\n                        name=\"exchange-symbol\"\n                        onChange={menuChange}>\n                        {\n                            currency.map( (c, idx) => (\n                                <MenuItem key={idx} value={c}>{c}</MenuItem>\n                            ))\n                        }\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item container xs={12} md={1} alignItems=\"center\" justify=\"center\">\n                <IconButton onClick={onAddClicked}>\n                    <IoAddCircleOutline/>\n                </IconButton>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Exchange;","import React, {useState} from 'react';\nimport {Paper, Chip} from '@material-ui/core';\nimport Exchange from 'components/search/Exchange';\nimport 'components/Search.css'\n\nconst Search = ({select, stroke, orientation}) => {\n    const [tab, setTab] = useState(\"환율\");\n    const list = [\"환 율\", \"국내 기업\"];\n    const renderSearchComponent = () => {\n        switch (tab) {\n            case \"환 율\":\n                return <Exchange select={select} orientation={orientation} stroke={stroke}/>\n                break;\n        \n            default:\n                return <></>;\n                break;\n        }\n    }\n    return(\n        <Paper variant=\"elevation\" elevation={2}>\n            <div id=\"search-select\">\n                {\n                    list.map((name, idx)=> (\n                        <Chip\n                            key={idx}\n                            label={name}\n                            onClick={()=>setTab(name)}\n                            clickable\n                            color=\"primary\"\n                        />\n                    ))\n                }\n            </div>\n            <div id=\"search-tab\">\n                {renderSearchComponent()}\n            </div>\n        </Paper>\n    )\n}\n\nexport default Search;","import React, { useEffect, useState } from 'react';\nimport {ResponsiveContainer, ComposedChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\nimport PropTypes from 'prop-types';\nimport {Data} from 'objects/Data';\n\n// [\"KRW\", {2020-12-01:1000, 2020-12-02:1020, 2020-12-03:1030}] 와\n// [\"CNY\", {2020-12-01:6.9, 2020-12-02:7, 2020-12-03:7.1}]을\n// [{date:2020-12-01, KRW:1000, CNY:6.9}, {date:2020-12-02, KRW:1020, CNY:7}, {date:2020-12-03, KRW:1030, CNY:7.1}] 로 합성\nexport const merge = (xAxis, ...name_data_entries) => {\n    let res = [];\n    let copy_data = name_data_entries.map(([name, data]) => [name, Object.assign({}, data)]);\n    copy_data.forEach(([name, data]) => {\n        let xList\n        try{ \n            xList = Object.keys(data);\n        }catch(e){\n            xList=[];\n        }\n        xList.forEach( x => {\n            let obj = {[xAxis]: x};\n            copy_data.forEach( ([n, dt]) => {\n                if( x in dt){\n                    obj[n] = dt[x];\n                    delete dt[x];\n                }\n            })\n            res=[...res, obj];\n        })\n    })\n    return res.sort( (m, n) => m[xAxis]  > n[xAxis] ? 1 : -1);;\n}\n\nconst DataChart = ({datas, xAxis}) => {\n    const [mergedData, setMergedData] = useState([]);\n    useEffect(()=> {\n        setMergedData( merge(xAxis, ...datas.map( d => [d.yAxis, d.data])) );\n    },[datas])\n    const yAxisLabel = (name) => ({\n        value: name,\n        angle: 0,\n        offset: -25,\n        position: 'insideTop',\n        textAnchor: 'middle'\n    })\n    return( \n    <ResponsiveContainer width=\"100%\">\n        <ComposedChart data={mergedData} margin={{top: 30, right: 5, left: 5, bottom: 5}}>\n            <XAxis name={xAxis} dataKey={xAxis}/>\n            {\n                datas.map( (d, idx) => {\n                    const {yAxis, orientation} = d;\n                    return (\n                        <YAxis \n                            key={idx} \n                            name={yAxis}\n                            domain={['auto', 'auto']}\n                            yAxisId={yAxis} \n                            orientation={orientation} \n                            allowDataOverflow={false}\n                            label={yAxisLabel(yAxis)}/>\n                            )\n                } )\n            }\n            <CartesianGrid strokeDasharray=\"5 5\"/>\n            <Tooltip/>\n            <Legend/>\n            {\n                datas.map( (d, idx) => {\n                    let {yAxis, type, stroke} = d;\n                    return (\n                        type===\"line\" &&\n                        <Line \n                            yAxisId={yAxis}\n                            type=\"monotone\" \n                            key={idx}\n                            name={yAxis}\n                            dataKey={yAxis} \n                            stroke={stroke} \n                            strokeWidth={2} \n                            dot={false} />\n\n                    )\n                })\n            }\n        </ComposedChart>\n    </ResponsiveContainer>\n    )\n}\nDataChart.propTypes={\n    data: PropTypes.arrayOf(PropTypes.instanceOf(Data)),\n    xAxis:PropTypes.string.isRequired\n}\n\nexport default DataChart;","import { Chip } from '@material-ui/core'\nimport React, {useEffect} from 'react';\nimport { merge } from 'components/DataChart';\n\nconst Selected = ({selected, labels, removeSelected}) => {\n    const ViewSelected = ({stroke, label, idx}) => {\n        return (\n            <Chip\n                label={label}\n                style={{background: stroke}}\n                onDelete={()=>{removeSelected(idx)}}\n            />\n        )\n    }\n    return(\n        <>\n        {\n            selected.map((s, idx)=>(\n                <ViewSelected key={idx} stroke={s.stroke} label={s.putLabel()} idx={idx}/>\n            ))\n        }\n        </>\n    )\n}\n\nexport default Selected;","import React, { useState, useEffect } from 'react';\nimport Search from 'components/Search';\nimport Selected from 'components/Selected';\nimport DataChart from 'components/DataChart';\n \nconst shuffle = (array) => array.map(a => ([Math.random(),a]))\n                                .sort((a,b) => a[0]-b[0])\n                                .map(a => a[1])\nconst Home = () => {\n    const [defaultStrokes, setStrokes] = useState([\"#8884d8\", \"#ff9d44\", \"#44aaff\",\"#73c96c\", \"#ee3333\"]);\n    useEffect(() => {\n        setStrokes(prev => shuffle(prev));\n    }, [])\n    const useSelected = () => {\n        const [selected, setSelected] = useState([]);\n        const [labels, setLabels] = useState([]);\n        const select = (newData) => {\n            const newLabel = newData.putLabel();\n            if(labels.includes(newLabel)){\n                alert('이미 선택한 데이터입니다!')\n                return;\n            } else if(labels.length>=4){\n                alert('4개 데이터까지만 비교할 수 있습니다.');\n                return;\n            }\n            setSelected(prev => [...prev, newData]);\n            setLabels(prev => [...prev, newLabel]);\n        }\n        const removeSelected = (idx) => {\n            setSelected(prev => prev.filter((p, index)=> index!==idx));\n            setLabels(prev => prev.filter((p, index)=> index!=idx));\n        }\n        return [selected, labels, select, removeSelected];\n    }\n    const [selected, labels, select, removeSelected] = useSelected();\n    return(\n        <>\n        <div style={{height:'400px'}}>\n            {selected.length>0 && <DataChart datas={selected} xAxis=\"date\"/>}\n        </div>\n        <div id=\"selected\">\n            <Selected selected={selected} labels={labels} removeSelected={removeSelected}/>\n        </div>\n        <Search select={select} stroke={defaultStrokes[labels.length]} orientation={labels.length & 1 ? \"right\" : \"left\"}/>\n        </>\n    )\n}\n\nexport default Home;","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage(); ","import React from 'react';\nimport {firebaseInstance, authService} from 'fbase';\nimport {Button} from '@material-ui/core';\nimport {IoLogoGoogle} from 'react-icons/io5';\n\nconst Auth = () => {\n    const onGooleClick = async () => {\n        const provider = new firebaseInstance.auth.GoogleAuthProvider();\n        await authService.signInWithPopup(provider);\n    }\n\n    return(\n        <Button \n            variant=\"outlined\" \n            onClick={onGooleClick} \n            fullWidth> \n            <IoLogoGoogle/> &nbsp; 구글아이디로 로그인\n        </Button>\n    )\n}\n\nexport default Auth;","import React from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport Home from 'routes/Home';\nimport Auth from 'routes/Auth';\n\nconst Router = ({isLoggedIn}) => {\n    return (\n        <HashRouter>\n            <Switch>\n                {\n                    isLoggedIn ?\n                        <Route exact path=\"/\">\n                            <Home />\n                        </Route>\n                    :\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                }\n            </Switch>\n        </HashRouter>\n    )\n}\n\nexport default Router;","import React, { useEffect, useState } from 'react';\nimport Router from 'Router';\nimport {authService} from 'fbase';\n\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [user, setUser] = useState(null);\n  useEffect(()=>{\n    authService.onAuthStateChanged( u => {\n      if(u)\n        setUser(u)\n      setInit(true);\n    })\n  })\n  return init ?\n          <Router isLoggedIn={Boolean(user)}/>\n          :\n          <h4>로딩중입니다...</h4>\n}\nDate.prototype.format= function (f){\n  // yyyy : Full Year \n  f=f.replace('yyyy', this.getFullYear());\n  // yy : year in length 2\n  f=f.replace('yy', this.getFullYear()%100);\n  // mm : Month\n  f=f.replace('mm', this.getMonth() > 8 ? this.getMonth() + 1 : '0' + (this.getMonth() + 1));\n  // dd : date\n  f=f.replace('dd', this.getDate() > 9 ? this.getDate() : '0' + (this.getDate()));\n  return f;\n}\nDate.prototype.addDate = function(dates){\n  this.setDate(this.getDate()+dates);\n  return this;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'App';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>\n  document.getElementById('root')\n);"],"sourceRoot":""}